-- local common = require("insis.lsp.common-config")
-- local opts = {
--   capabilities = common.capabilities,
--   flags = common.flags,
--   on_attach = function(_, bufnr)
--     common.keyAttach(bufnr)
--     -- common.disableFormat(client)
--   end,
--   -- https://github.com/golang/tools/blob/master/gopls/doc/vim.md#neovim
--   -- https://github.com/golang/tools/blob/master/gopls/doc/settings.md
--   settings = {
--     gopls = {
--       analyses = {
--         unusedparams = true,
--       },
--       staticcheck = true,
--     },
--   },
-- }
-- return {
--   on_setup = function(server)
--     server.setup(opts)
--   end,
-- }



-- local util = require("lspconfig.util")
-- local opts = {
-- 	capabilities = require("lsp.common-config").capabilities,
-- 	on_attach = function(client, bufnr)
-- 		local lspComm = require("lsp.common-config")
-- 		lspComm.keyAttach(bufnr)
-- 		lspComm.navic.attach(client, bufnr)
-- 		vim.opt_local.winbar = "%{%v:lua.require('nvim-navic').get_location()%}"
-- 		-- lspComm.shwLinDiaAtom(bufnr)
-- 		-- lspComm.hlSymUdrCursor(client, bufnr)  -- vim-illuminate plugin do this
-- 		-- lspComm.disableFormat(client)
-- 	end,
-- 	handlers = require("lsp.common-config").handlers,
-- 	root_dir = function(fname)
-- 		return util.root_pattern(unpack(root_files))(fname) or util.find_git_ancestor(fname)
-- 	end,
-- }
-- return {
-- 	on_setup = function(server)
-- 		server.setup(opts)
-- 	end,
-- }
